@import github.buriedincode.bookshelf.models.Publisher
@param publisher: Publisher

<!DOCTYPE html>
<html lang="en-GB">
<head>
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1" name="viewport">
    <title>Bookshelf</title>
    <link href="https://use.fontawesome.com/releases/v6.3.0/css/all.css" rel="stylesheet">
    <link id="dark-theme" href="/static/css/custom-bulma-dark.css" rel="stylesheet">
    <link id="light-theme" disabled href="/static/css/custom-bulma-light.css" rel="stylesheet">
    <link href="/static/css/styles.css" rel="stylesheet">
    <link href="/static/img/favicon.ico" id="favicon" rel="icon" type="image/x-icon">
</head>
<body class="has-navbar-fixed-top">
    @template.components.navbar()
    <main class="section">
        <div class="container">
            <header class="block has-text-centered">
                <h1 class="title is-1">Edit Publisher</h1>
            </header>
            <div class="box">
                <form id="edit-publisher-form" onsubmit="return false;">
                    @template.components.forms.input(label = "Title", name = "title", value = publisher.title)
                </form>
            </div>
            <div class="buttons is-multiline is-centered">
                <button class="button is-success" id="save-publisher-button" onclick="savePublisher()" type="button">
                    <span class="icon">
                        <i class="fa-solid fa-floppy-disk"></i>
                    </span>
                    <span>Save</span>
                </button>
            </div>
        </div>
    </main>
    @template.components.footer()
    <script src="/static/js/bulma-navbar.js" type="text/javascript"></script>
    <script src="/static/js/scripts.js" type="text/javascript"></script>
    <script type="text/javascript">
        function savePublisher() {
            const caller = "save-publisher-button";
            let form = document.getElementById("edit-publisher-form");
            let formData = Object.fromEntries(new FormData(form));
            console.log(formData);

            addLoading(caller);
            fetch("/api/v0.0/publishers/${publisher.id.value}", {
                method: "PUT",
                headers: headers,
                body: JSON.stringify({
                    "title": formData["title"]
                }),
            }).then((response) => {
                if (!response.ok){
                    return Promise.reject(response);
                }
                form.reset();
                window.location = "/publishers/${publisher.id.value}";
            }).catch((response) => response.json().then((msg) => {
                @raw
                    alert(`${response.status} ${response.statusText} => ${msg.title}`);
                @endraw
            })).finally(() => removeLoading(caller));
        }
    </script>
</body>
</html>