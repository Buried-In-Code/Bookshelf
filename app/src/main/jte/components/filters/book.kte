@import github.buriedincode.bookshelf.models.Creator
@import github.buriedincode.bookshelf.models.Format
@import github.buriedincode.bookshelf.models.Publisher
@import github.buriedincode.bookshelf.models.Series
@import kotlin.collections.List
@param creators: List<Creator>
@param creatorSelected: Creator? = null
@param formats: List<Format>
@param formatSelected: Format? = null
@param hasRead: Boolean? = null
@param readDisabled: Boolean = false
@param hasWished: Boolean? = null
@param wishedDisabled: Boolean = false
@param isCollected: Boolean? = null
@param collectedDisabled: Boolean = false
@param publishers: List<Publisher>
@param publisherSelected: Publisher? = null
@param series: List<Series>
@param seriesSelected: Series? = null
@param title: String? = null
@param resetUrl: String

<div class="box has-background-text-soft is-shadowless">
    <h4 class="title is-4 has-text-text-bold">Filter Books</h4>
    <form accept-charset="UTF-8" method="GET">
        @template.components.forms.select.creator(options = creators, selected = creatorSelected)
        @template.components.forms.select.format(options = formats, selected = formatSelected)
        @template.components.forms.select.boolean(label = "Read", name = "has-read", positive = "Read", negative = "Not read", selected = if(isCollected == false) null else hasRead, icon = "fa-solid fa-bookmark", disabled = readDisabled || isCollected == false)
        @template.components.forms.select.boolean(label = "Wished", name = "has-wished", positive = "Wished", negative = "Not wished", selected = if(isCollected == true) null else hasWished, icon = "fa-solid fa-star", disabled = wishedDisabled || isCollected == true)
        @template.components.forms.select.boolean(label = "Collected", name = "is-collected", positive = "Collected", negative = "Missing", selected = isCollected, icon = "fa-solid fa-box-archive", disabled = collectedDisabled)
        @template.components.forms.select.publisher(options = publishers, selected = publisherSelected)
        @template.components.forms.select.series(options = series, selected = seriesSelected)
        @template.components.forms.input(label = "Title", name = "title", value = title, icon = "fa-solid fa-heading")
        <div class="buttons is-centered">
            <button class="button is-info">
                <span class="icon">
                    <i class="fa-solid fa-filter"></i>
                </span>
                <span>Filter</span>
            </button>
            <button class="button is-warning" onclick="resetForm('${resetUrl}')" type="button">
                <span class="icon">
                    <i class="fa-solid fa-rotate"></i>
                </span>
                <span>Reset</span>
            </button>
        </div>
    </form>
</div>